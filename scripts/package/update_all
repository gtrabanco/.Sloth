#!/usr/bin/env bash
#shellcheck disable=SC1091

set -euo pipefail

. "${SLOTH_PATH:-$DOTLY_PATH}/scripts/core/src/_main.sh"

update_all_error() {
  [[ -n "${1:-}" ]] && output::write "Error updating ${1:-} apps. See \`dot self debug\` for view errors"
}

##? Update all packages
##?
##? Usage:
##?   update_all
docs::parse "$@"

output::h1_without_margin "♻️  Updating all the apps on your system"
output::write "If you want to debug what's happening behind the scenes, you can execute \`dot self debug\` in parallel."
output::empty_line

for package_manager_src in $(package::get_all_package_managers "is_available" "update_all"); do
  package_manager_filename="$(basename "$package_manager_src")"
  package_manager="${package_manager_filename%%.sh}"
  package_title="${package_manager}_title"

  if
    package::command "$package_manager" "is_available" &&
      package::command_exists "$package_manager" "update_all"
  then
    output::h2 "${!package_title}"
    package::command "$package_manager" "update_all" || update_all_error "${!package_title}"
  fi
done

{
  platform::command_exists tldr && output::h2 '📜 tldr database' && tldr --update
} || update_all_error '📜 tldr database'

{
  output::h2 "Zim Framework" && zsh "${SLOTH_PATH:-$DOTLY_PATH}/modules/zimfw/zimfw.zsh" upgrade 2>&1 | log::file "Updating Zim"
} || update_all_error '(Zim:FW) Zim Framework'

output::empty_line
output::solution '👌 All your packages have been successfully updated'