#!/usr/bin/env bash
#shellcheck disable=SC1091

set -euo pipefail

. "${SLOTH_PATH:-${DOTLY_PATH:-}}/scripts/core/src/_main.sh"

update_all_error() {
  [[ -n "${1:-}" ]] && output::write "Error updating ${1:-} apps. See \`dot self debug\` for view errors"
}

##? Update all packages
##?
##? Usage:
##?   update_all [<package_managers>...]
##?
##? Arguments:
##?   package_manager  Package manager to use for updating (could be registry, cargo, apt, yum, etc.)
##?
#? v3.1.0
docs::parse "$@"

output::h1_without_margin "‚ôªÔ∏è  Updating all the apps on your system"
output::write "If you want to debug what's happening behind the scenes, you can execute \`dot self debug\` in parallel."
output::empty_line

if [[ -z "${package_managers[*]:-}" ]]; then
  readarray -t package_managers < <(package::get_all_package_managers "is_available" "update_all")
fi

for package_manager in "${package_managers[@]}"; do
  package_title="${package_manager}_title"

  if
    package::command "$package_manager" "is_available" &&
      package::command_exists "$package_manager" "update_all"
  then
    output::h2 "${!package_title}"
    package::command "$package_manager" "update_all" || update_all_error "${!package_title}"
  fi
done

output::empty_line
output::solution 'üëå All your packages have been successfully updated'