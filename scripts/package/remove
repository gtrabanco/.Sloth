#!/usr/bin/env bash

set -euo pipefail

[[ -z "${SLOTH_PATH:-${DOTLY_PATH:-}}" ]] && exit 1

#shellcheck disable=SC1091
. "${SLOTH_PATH:-${DOTLY_PATH:-}}/scripts/core/src/_main.sh"

uninstall_package_output() {
  [[ -z "${1:-}" ]] && return 1
  local -r package_name="$1"
  if ! package::is_installed "$package_name"; then
    output::answer "Package \`$package_name\` is not installed"
  else
    uninstall_package_force "$package_name"
  fi
}

uninstall_package_force() {
  [[ -z "${1:-}" ]] && return 1
  local -r package_name="$1"

  if package::uninstall "$package_name" && ! package::is_installed "$package_name"; then
    output::answer "Package \`$package_name\` was uninstalled"
  else
    output::error "Package \`$package_name\` could not be uninstalled"
    return 1
  fi
}

##? Uninstall a package if available by using the right package manager
##?
##?
##? Usage:
##?   delete [-h | --help]
##?   delete [-v | --version]
##?   delete [-f | --force] <packages_names>...
##?
##? Options:
##?   -h --help     Show this help
##?   -v --version  Show the program version
##?   -f --force    Does not check if package is installed before uninstalling.
##?                 If it is a recipe and has uninstall function it will be
##?                 executed but if the package is installed with any package
##?                 manager and could not found which one was used it won't
##?                 execute any uninstall command.
##?
##? Author:
##?   Gabriel Trabanco Llano <gtrabanco@users.noreply.github.com>
##?
##? SCRIPT_VERSION "1.0.0"
docs::parse "$@"

if [[ -z "${packages_names[*]:-}" ]]; then
  output::error "Wrong number of params, seeing \`${SCRIPT_NAME:-} --help\`:"
  output::empty_line
  docs::parse "--help"
  exit 1
fi

output_code=0
if [[ ${#packages_names[@]} -eq 1 ]]; then
  if ${force:-false}; then
    uninstall_package_force "${packages_names[*]}" || output_code=1
  else
    uninstall_package_output "${packages_names[*]}" || output_code=1
  fi
else
  for package_name in "${packages_names[@]}"; do
    if ${force:-false}; then
      uninstall_package_force "$package_name" || output_code=1
    else
      uninstall_package_output "$package_name" || output_code=1
    fi
  done
fi

exit $output_code
