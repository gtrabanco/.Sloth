#!/usr/bin/env bash

set -euo pipefail

[[ -z "${SLOTH_PATH:-${DOTLY_PATH:-}}" ]] && exit 1

#shellcheck disable=SC1091
. "${SLOTH_PATH:-${DOTLY_PATH:-}}/scripts/core/src/_main.sh"

which_package_output() {
  local package_manager package_name
  package_name="${1:-}"
  [[ -z "$package_name" ]] && return
  package_manager="$(package::which_package_manager "$package_name" || true)"
  if [[ -z "$package_manager" ]] && platform::command_exists "$package_name"; then
    output::error "Command named \`${package_name}\` was detected but could not be determined which package manager was used to install it"
    return 1
  elif [[ -z "$package_manager" ]]; then
    output::error "Package named \`${package_name}\` was not installed with any package manager"
    return 1
  else
    output::answer "Package named \`${package_name}\` was installed with \`$package_manager\`"
  fi
}

##? Gives user information about which package manager have been used to install a package
##?
##?
##? Usage:
##?   which [-h | --help]
##?   which [-v | --version]
##?   which <packages_names>...
##?
##? Arguments:
##?   package_name  The package that must check from which package manager is installed with. You can provide as much packages you want
##?
##? Options:
##?   -h --help     Show this help
##?   -v --version  Show the program version
##?
##? Author:
##?   Gabriel Trabanco Llano <gtrabanco@users.noreply.github.com>
##?
#? v1.0.0
docs::parse "$@"

if [[ -z "${packages_names[*]:-}" ]]; then
  output::error "Wrong number of params, seeing \`${SCRIPT_NAME:-} --help\`:"
  output::empty_line
  docs::parse "--help"
  exit 1
fi

output_code=0
if [[ ${#packages_names[@]} -eq 1 ]]; then
  which_package_output "${packages_names[*]}" || output_code=1
else
  for package_name in "${packages_names[@]}"; do
    which_package_output "$package_name" || output_code=1
  done
fi

exit $output_code
