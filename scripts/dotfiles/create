#!/usr/bin/env bash

set -euo pipefail

#shellcheck disable=SC1091
. "${SLOTH_PATH:-${DOTLY_PATH:-}}/scripts/core/src/_main.sh"
dot::load_library "templating.sh" "core"

# FIXME Modify this to use dot core loader --modify DOTFILES_PATH
dotfiles::apply_templating() {
  local tpl_files=(
    "${DOTFILES_PATH}/bin/sdot"
    "${DOTFILES_PATH}/shell/bash/.bashrc"
    "${DOTFILES_PATH}/shell/zsh/.zshenv"
  )

  for file in "${tpl_files[@]}"; do
    templating::replace "$file" --dotfiles-path="${DOTFILES_PATH//$HOME/\$HOME}"
  done
}

##? Create the dotfiles structure
##?
##? Usage:
##?    create [<dotfiles_path>]
##?
if ! ${DOTLY_INSTALLER:-false}; then
  docs::parse "$@"
elif [[ "${1:-}" == "--help" || "${1:-}" == "-h" ]]; then
  grep '^##?' "$0" | tr '##? ' ' '
fi

DOTFILES_PATH="${2:-${DOTFILES_PATH:-/dev/null}}"

[[ -z "$DOTFILES_PATH" ]] && output::error "DOTFILES_PATH not found" && exit 1

mkdir -p "$DOTFILES_PATH" || output::error "Could not create \`${DOTFILES_PATH}\`" && exit 1

if [ ! -d "${DOTFILES_PATH}/shell" ]; then
  cp -r "${SLOTH_PATH:-${DOTLY_PATH:-}}/dotfiles_template/"* "${DOTFILES_PATH}/"

  dotfiles::apply_templating

  log::success "Done!"
else
  log::note "dotfiles already created, ignoring"
fi
