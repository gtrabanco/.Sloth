#!/usr/bin/env bash

set -euo pipefail

#shellcheck disable=SC1091
. "${SLOTH_PATH:-$DOTLY_PATH}/scripts/core/src/_main.sh"

symlinks::apply() {
  [[ -z "${1:-}" ]] && return 1
  local -r CONFIG="$DOTFILES_PATH/symlinks/$1"
  shift

  echo
  "$DOTLY_PATH/modules/dotbot/bin/dotbot" "$@" "$CONFIG" || output::error "Error applying symlinks file name '$(basename "$CONFIG")'"
  echo
}

##? Apply all symlinks
##?
##? Usage:
##?    apply [-h | --help]
##?    apply [-v | --version]
##?    apply [-q | --quiet]
##?
##? Options:
##?   -h --help     Show this help
##?   -v --version  Show the program version
##?
if ! ${DOTLY_INSTALLER:-false}; then
  docs::parse "$@"
elif [[ "${1:-}" == "--help" || "${1:-}" == "-h" ]]; then
  grep '^##?' "$0" | tr '##? ' ' '
fi

SCRIPT_NAME="sloth symlinks apply"
SCRIPT_VERSION="1.0.0"

# Print name and version
if ${version:-false}; then
  output::write "$SCRIPT_NAME v$SCRIPT_VERSION"
  exit
fi

symlinks::apply "conf.yaml"

if platform::is_macos; then
  if platform::is_macos_arm; then
    symlinks::apply "conf.macos.yaml" "${_args[@]}"
  else
    symlinks::apply "conf.macos-intel.yaml" "${_args[@]}"
  fi
else
  symlinks::apply "conf.linux.yaml" "${_args[@]}"
fi

log::success "Done!"
