#!/usr/bin/env bash

set -euo pipefail

[[ -z "${SLOTH_PATH:-${DOTLY_PATH:-}}" ]] && exit 1

#shellcheck disable=SC1091
. "${SLOTH_PATH:-${DOTLY_PATH:-}}/scripts/core/_main.sh"
dot::load_library "git_extended.sh" "core"
dot::load_library "sloth_update.sh" "core"

##? Update dotly/sloth to the latest stable release
##?
##? Usage:
##?    update [--disable | --enable]
##?
##? Options:
##?    --disable  Deactivate the dotly update command
##?    --enable   Activate the dotly update command
##?
docs::parse "$@"

if ${disable:-enable}; then
  touch "$DOTFILES_PATH/.sloth_force_current_version"
  exit 0
elif ${enable:-false}; then
  rm -f "$DOTFILES_PATH/.sloth_force_current_version"
  exit 0
fi

if [[ -f "$DOTFILES_PATH/.sloth_force_current_version" ]]; then
  output::error "Updates are disabled: use \`dot core update --enable\` to enable them"
fi

# update::update_local_sloth_module
status=0
sloth_update::gracefully | log::file "Updating .Sloth" || status=$?
if [[ $status -ne 0 ]]; then
  case $status in
    10)
      output::error "No update, dirty or pending commits"
      ;;
    20)
      output::error "No update, upstream does not exists and/or could not be set"
      ;;
    30)
      output::error "No update, remote head branch could not be set"
      ;;
    40)
      output::error "No updated something was wrong"
      ;;
  esac
fi


if [[ -f "$DOTFILES_PATH/.sloth_updated" ]]; then
  output::answer 'âœ… .Sloth updated to the latest version'
else
  output::answer 'ðŸ‘Œ You already have latest .Sloth version'
fi
