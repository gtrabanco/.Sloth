#!/usr/bin/env bash

set -uo pipefail

[[ -z "${SLOTH_PATH:-${DOTLY_PATH:-}}" ]] && exit 1

#shellcheck disable=SC1091
. "${SLOTH_PATH:-${DOTLY_PATH:-}}/scripts/core/src/_main.sh"
dot::load_library "templating.sh" "core"
dot::load_library "git_extended.sh" "core"
dot::load_library "sloth_update.sh" "core"

##?  Executes migration scripts for dotfiles. If your dotly is updated and no
##? script version is provided then try to guess the latest necessary migration
##? script.
##?
##? Usage:
##?   migration [-h | --help]
##?   migration [-v | --version]
##?   migration --updated
##?   migration [<to_version>]
##?
##? Options:
##?   -h --help         Show this help
##?   -v --version      Show the program version
##?   --updated         Execute migration script of the latest version (if any)
##?
##? Author:
##?   Gabriel Trabanco Llano <gtrabanco@users.noreply.github.com>
##?
##? SCRIPT_VERSION "2.0.0"
docs::parse "$@"

SCRIPT_NAME="sloth core version"

# Print name and version
if ${version:-}; then
  output::write "$SCRIPT_NAME v$SCRIPT_VERSION"
  exit
fi

output::header "SLOTH migration wizard"

if
  [[ -z "${to_version:-}" ]] &&
    ${updated:-false}
then

  if
    [[ -f "${SLOTH_UPDATED_FILE:-$DOTFILES_PATH/.sloth_updated}" ]] &&
      sloth_update::exists_migration_script
  then
    to_version="$(sloth_update::get_current_version)"
    rm -f "${SLOTH_UPDATED_FILE:-$DOTFILES_PATH/.sloth_updated}"
    output::empty_line
    output::write "     ü•≥ üéâ üçæ      SLOTH UPDATED     ü•≥ üéâ üçæ  "
    output::empty_line
    output::answer "Detected a migration script: executing the script."
  else
    exit 0
  fi

elif [[ -z "${to_version:-}" ]]; then
  to_version="$(find "${SLOTH_PATH:-${DOTLY_PATH:-}}/migration/" -name "*" -type f,l -executable -print0 | xargs -0 -I _ basename _ | sort --reverse | fzf --header "Select migration script version")"
fi

if [[ -n "$to_version" ]] && [[ -x "${SLOTH_PATH:-${DOTLY_PATH:-}}/migration/$to_version" ]]; then
  output::write "You will execute migration script for \`$to_version\` this could"
  output::write "result in a damage of your current dotfiles if they are not"
  output::write "organized as expected."
  output::write "PLEASE PERFORM A BACKUP OF YOUR DOTFILES BEFORE CONTINUE"
  output::empty_line

  ! output::yesno "Sure you want to continue" && exit 1
  output::empty_line

  #shellcheck source=/dev/null
  . "${SLOTH_PATH:-${DOTLY_PATH:-}}/migration/$to_version" || output::error "Migration script '$to_version' could not be executed"
else
  output::error "There is no migration script for version '$to_version' or is not a executable file"
fi

if [[ -n "$to_version" ]] && { [[ -f "${SLOTH_PATH:-${DOTLY_PATH:-}}/symlinks/$to_version.yaml" ]] || [[ -f "${SLOTH_PATH:-${DOTLY_PATH:-}}/symlinks/$to_version.yml" ]]; }; then
  output::header "Applying symlinks for '$to_version'"
  "${SLOTH_PATH:-${DOTLY_PATH:-}}/bin/dot" symlinks update "$to_version"
fi

# If migration script is executed then finalize the update
if ${updated:-false}; then
  if [[ -f "${SLOTH_UPDATED_FILE:-$DOTFILES_PATH/.sloth_updated}" ]]; then
    rm -f "${SLOTH_UPDATED_FILE:-$DOTFILES_PATH/.sloth_updated}"
    output::empty_line
    output::write "     ü•≥ üéâ üçæ      SLOTH UPDATED     ü•≥ üéâ üçæ  "
    output::empty_line
  fi
fi
