#!/usr/bin/env zsh

# Theme configuration
SLOTH_THEME_MINIMAL=${SLOTH_THEME_MINIMAL:-false}
SLOTH_THEME_MULTILINE=${SLOTH_THEME_MULTILINE:-false}
SLOTH_THEME_SHOW_UNTRACKED=${SLOTH_THEME_SHOW_BEHIND:-true}
SLOTH_THEME_SHOW_BEHIND=${SLOTH_THEME_SHOW_BEHIND:-true}
SLOTH_USE_RIGHT_PROMPT=${SLOTH_USE_RIGHT_PROMPT:-true} # Only used when no minimal theme is set
SLOTH_THEME_PWD_MODE="${SLOTH_THEME_PWD_MODE:-short}" # short or full


 [[ $(echotc Co) -gt 100 ]] && support_color_tones=true || support_color_tones=false

git_no_changes_status="âœ“"
git_dirty_status="âœ—"
git_branch_color="green"
git_dirty_status_color="yellow"
git_on_branch_color="white"
pwd_color="yellow"
status_incon_color="white"

ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=8"

prompt_sloth_pwd() {
  case "$CODELY_THEME_PWD_MODE" in
    short) local -r prompt_dir=$("${SLOTH_PATH:-${DOTLY_PATH:-}}/bin/dot" core short_pwd) ;;
    full) local -r prompt_dir="$PWD" ;;
  esac

  print -n "%F{$pwd_color}${prompt_dir}"
}

prompt_sloth_git() {
  [[ -n ${git_info} ]] && print -n "%F{$git_on_branch_color} on${(e)git_info[prompt]}"
}

prompt_sloth_precmd() {
  (( ${+functions[git-info]} )) && git-info
}

prompt_sloth_autoupdate() {
  if [ -f "$DOTFILES_PATH/.sloth_update_available" ]; then
    print -n "ðŸ“¥ | "
  fi
}

prompt_sloth_setup() {
  local prompt_codely_status
  
  prompt_codely_status="%(?:%F{green}{%F{$status_icon_color}$status_icon_ok%F{green}}:%F{red}{%F{$status_icon_color}$status_icon_ko%F{red}})"

  autoload -Uz add-zsh-hook && add-zsh-hook precmd prompt_codely_precmd

  prompt_opts=(cr percent sp subst)

  zstyle ':zim:git-info:branch' format "%F{$git_branch_color}%b"
  zstyle ':zim:git-info:commit' format "%c"
  zstyle ':zim:git-info:clean' format "%F{$git_no_changes_status_color}$git_no_changes_status"
  zstyle ':zim:git-info:dirty' format "%F{$git_dirty_status_color}$git_dirty_status"
  zstyle ':zim:git-info:keys' format "prompt" " %F{cyan}%b%c %C%D"

  if [ "$CODELY_THEME_MINIMAL" = true ]; then
    PS1="\$(prompt_dotly_autoupdate)${prompt_codely_status} \$(prompt_codely_pwd) "
  else
    PS1="\$(prompt_dotly_autoupdate)${prompt_codely_status} \$(prompt_codely_pwd)\$(prompt_codely_git)%f "
  fi

  if [ "$CODELY_THEME_PROMPT_IN_NEW_LINE" = true ]; then
    PS1="â”Œ$PS1"$'\nâ””âž¤ '
  fi

  RPS1=''
}

prompt_sloth_setup "${@}"
