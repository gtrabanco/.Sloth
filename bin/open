#!/usr/bin/env bash

# Open command if open exists in system
SCRIPT_PATH="$(cd -- "$(dirname "$0")" && pwd -P)"
FULL_SCRIPT_PATH="$SCRIPT_PATH/$(basename "$0")"

readarray -c 1 -t all_open_bin < <(type -a open | sed 's/open is //g' | grep -v "$FULL_SCRIPT_PATH")
OPEN_BIN=""
if [[ "${#all_open_bin[@]}" -gt 0 ]]; then
  OPEN_BIN="${all_open_bin[0]}"
fi

os="$(echo "${SLOTH_OS:-$(uname -s)}" | tr '[:upper:]' '[:lower:]')"

if [[ -x "$OPEN_BIN" ]]; then
  "$OPEN_BIN" "$@"
else
  case "$os" in
    Linux*)
      if grep -q Microsoft /proc/version; then
        cmd.exe /C start "$@"
      elif [[ -n "$OPEN_BIN" && -x "$OPEN_BIN" ]]; then
        "$OPEN_BIN" "$@"
      elif ! which xdg-open | grep 'not found'; then
        xdg-open "$@"
      elif ! which gnome-open | grep 'not found'; then
        gnome-open "$@"
      else
        echo -e "\033[0;31mNot possible to use \`open\` command in this system\033[0m"
        exit 4
      fi
      ;;
    *cygwin*)
      if command -v cygstart &> /dev/null; then
        cygstart "$@"
      else
        echo -e "\033[0;31mNot possible to use \`open\` command in this system\033[0m"
        exit 4
      fi
      ;;
    *)
      echo -e "\033[0;31m\`open\` command or any other known alternative does not exists in this system\033[0m"
      exit 1
      ;;
  esac
fi